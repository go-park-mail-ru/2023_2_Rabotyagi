// Code generated by MockGen. DO NOT EDIT.
// Source: delivery/city_handler.go
//
// Generated by this command:
//
//	mockgen -source=delivery/city_handler.go -destination=mocks/city_handler.go -package=mocks
//
// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/go-park-mail-ru/2023_2_Rabotyagi/pkg/models"
	gomock "go.uber.org/mock/gomock"
)

// MockICityService is a mock of ICityService interface.
type MockICityService struct {
	ctrl     *gomock.Controller
	recorder *MockICityServiceMockRecorder
}

// MockICityServiceMockRecorder is the mock recorder for MockICityService.
type MockICityServiceMockRecorder struct {
	mock *MockICityService
}

// NewMockICityService creates a new mock instance.
func NewMockICityService(ctrl *gomock.Controller) *MockICityService {
	mock := &MockICityService{ctrl: ctrl}
	mock.recorder = &MockICityServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockICityService) EXPECT() *MockICityServiceMockRecorder {
	return m.recorder
}

// GetFullCities mocks base method.
func (m *MockICityService) GetFullCities(ctx context.Context) ([]*models.City, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFullCities", ctx)
	ret0, _ := ret[0].([]*models.City)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFullCities indicates an expected call of GetFullCities.
func (mr *MockICityServiceMockRecorder) GetFullCities(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFullCities", reflect.TypeOf((*MockICityService)(nil).GetFullCities), ctx)
}

// SearchCity mocks base method.
func (m *MockICityService) SearchCity(ctx context.Context, searchInput string) ([]*models.City, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchCity", ctx, searchInput)
	ret0, _ := ret[0].([]*models.City)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchCity indicates an expected call of SearchCity.
func (mr *MockICityServiceMockRecorder) SearchCity(ctx, searchInput any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchCity", reflect.TypeOf((*MockICityService)(nil).SearchCity), ctx, searchInput)
}
