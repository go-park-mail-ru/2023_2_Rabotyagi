// Code generated by MockGen. DO NOT EDIT.
// Source: internal/category/usecases/category_usecase.go
//
// Generated by this command:
//
//	mockgen -source=internal/category/usecases/category_usecase.go -destination=internal/category/mocks/repository.go
//
// Package mock_usecases is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/go-park-mail-ru/2023_2_Rabotyagi/pkg/models"
	gomock "go.uber.org/mock/gomock"
)

// MockICategoryStorage is a mock of ICategoryStorage interface.
type MockICategoryStorage struct {
	ctrl     *gomock.Controller
	recorder *MockICategoryStorageMockRecorder
}

// MockICategoryStorageMockRecorder is the mock recorder for MockICategoryStorage.
type MockICategoryStorageMockRecorder struct {
	mock *MockICategoryStorage
}

// NewMockICategoryStorage creates a new mock instance.
func NewMockICategoryStorage(ctrl *gomock.Controller) *MockICategoryStorage {
	mock := &MockICategoryStorage{ctrl: ctrl}
	mock.recorder = &MockICategoryStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockICategoryStorage) EXPECT() *MockICategoryStorageMockRecorder {
	return m.recorder
}

// GetFullCategories mocks base method.
func (m *MockICategoryStorage) GetFullCategories(ctx context.Context) ([]*models.Category, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFullCategories", ctx)
	ret0, _ := ret[0].([]*models.Category)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFullCategories indicates an expected call of GetFullCategories.
func (mr *MockICategoryStorageMockRecorder) GetFullCategories(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFullCategories", reflect.TypeOf((*MockICategoryStorage)(nil).GetFullCategories), ctx)
}

// SearchCategory mocks base method.
func (m *MockICategoryStorage) SearchCategory(ctx context.Context, searchInput string) ([]*models.Category, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchCategory", ctx, searchInput)
	ret0, _ := ret[0].([]*models.Category)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchCategory indicates an expected call of SearchCategory.
func (mr *MockICategoryStorageMockRecorder) SearchCategory(ctx, searchInput any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchCategory", reflect.TypeOf((*MockICategoryStorage)(nil).SearchCategory), ctx, searchInput)
}
