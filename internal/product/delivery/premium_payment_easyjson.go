// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package delivery

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjsonAb7eef52DecodeGithubComGoParkMailRu20232RabotyagiInternalProductDelivery(in *jlexer.Lexer, out *Payment) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "amount":
			(out.Amount).UnmarshalEasyJSON(in)
		case "Capture":
			out.Capture = bool(in.Bool())
		case "confirmation":
			(out.Confirmation).UnmarshalEasyJSON(in)
		case "description":
			out.Description = string(in.String())
		case "metadata":
			if in.IsNull() {
				in.Skip()
				out.Metadata = nil
			} else {
				if out.Metadata == nil {
					out.Metadata = new(MetadataPayment)
				}
				(*out.Metadata).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonAb7eef52EncodeGithubComGoParkMailRu20232RabotyagiInternalProductDelivery(out *jwriter.Writer, in Payment) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"amount\":"
		out.RawString(prefix[1:])
		(in.Amount).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"Capture\":"
		out.RawString(prefix)
		out.Bool(bool(in.Capture))
	}
	{
		const prefix string = ",\"confirmation\":"
		out.RawString(prefix)
		(in.Confirmation).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"metadata\":"
		out.RawString(prefix)
		if in.Metadata == nil {
			out.RawString("null")
		} else {
			(*in.Metadata).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Payment) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonAb7eef52EncodeGithubComGoParkMailRu20232RabotyagiInternalProductDelivery(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Payment) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonAb7eef52EncodeGithubComGoParkMailRu20232RabotyagiInternalProductDelivery(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Payment) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonAb7eef52DecodeGithubComGoParkMailRu20232RabotyagiInternalProductDelivery(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Payment) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonAb7eef52DecodeGithubComGoParkMailRu20232RabotyagiInternalProductDelivery(l, v)
}
func easyjsonAb7eef52DecodeGithubComGoParkMailRu20232RabotyagiInternalProductDelivery1(in *jlexer.Lexer, out *MetadataPayment) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user_id":
			out.UserID = uint64(in.Uint64())
		case "product_id":
			out.ProductID = uint64(in.Uint64())
		case "period_code":
			out.PeriodCode = uint64(in.Uint64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonAb7eef52EncodeGithubComGoParkMailRu20232RabotyagiInternalProductDelivery1(out *jwriter.Writer, in MetadataPayment) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.UserID))
	}
	{
		const prefix string = ",\"product_id\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.ProductID))
	}
	{
		const prefix string = ",\"period_code\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.PeriodCode))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v MetadataPayment) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonAb7eef52EncodeGithubComGoParkMailRu20232RabotyagiInternalProductDelivery1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v MetadataPayment) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonAb7eef52EncodeGithubComGoParkMailRu20232RabotyagiInternalProductDelivery1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *MetadataPayment) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonAb7eef52DecodeGithubComGoParkMailRu20232RabotyagiInternalProductDelivery1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *MetadataPayment) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonAb7eef52DecodeGithubComGoParkMailRu20232RabotyagiInternalProductDelivery1(l, v)
}
func easyjsonAb7eef52DecodeGithubComGoParkMailRu20232RabotyagiInternalProductDelivery2(in *jlexer.Lexer, out *ConfirmationPayment) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "type":
			out.Type = string(in.String())
		case "return_url":
			out.ReturnURL = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonAb7eef52EncodeGithubComGoParkMailRu20232RabotyagiInternalProductDelivery2(out *jwriter.Writer, in ConfirmationPayment) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix[1:])
		out.String(string(in.Type))
	}
	{
		const prefix string = ",\"return_url\":"
		out.RawString(prefix)
		out.String(string(in.ReturnURL))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ConfirmationPayment) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonAb7eef52EncodeGithubComGoParkMailRu20232RabotyagiInternalProductDelivery2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ConfirmationPayment) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonAb7eef52EncodeGithubComGoParkMailRu20232RabotyagiInternalProductDelivery2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ConfirmationPayment) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonAb7eef52DecodeGithubComGoParkMailRu20232RabotyagiInternalProductDelivery2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ConfirmationPayment) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonAb7eef52DecodeGithubComGoParkMailRu20232RabotyagiInternalProductDelivery2(l, v)
}
func easyjsonAb7eef52DecodeGithubComGoParkMailRu20232RabotyagiInternalProductDelivery3(in *jlexer.Lexer, out *AmountPayment) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "value":
			out.Value = string(in.String())
		case "currency":
			out.Currency = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonAb7eef52EncodeGithubComGoParkMailRu20232RabotyagiInternalProductDelivery3(out *jwriter.Writer, in AmountPayment) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"value\":"
		out.RawString(prefix[1:])
		out.String(string(in.Value))
	}
	{
		const prefix string = ",\"currency\":"
		out.RawString(prefix)
		out.String(string(in.Currency))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AmountPayment) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonAb7eef52EncodeGithubComGoParkMailRu20232RabotyagiInternalProductDelivery3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AmountPayment) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonAb7eef52EncodeGithubComGoParkMailRu20232RabotyagiInternalProductDelivery3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AmountPayment) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonAb7eef52DecodeGithubComGoParkMailRu20232RabotyagiInternalProductDelivery3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AmountPayment) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonAb7eef52DecodeGithubComGoParkMailRu20232RabotyagiInternalProductDelivery3(l, v)
}
